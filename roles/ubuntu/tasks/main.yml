---
# tasks file for ubuntu
- name: Check the git directory status
  stat:
    path: "{{ dotfile_repo.dest }}"
  register: dotfile_repo_directory
    
- name: Update apt and install softwares
  apt:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    update_cache: yes
  with_items: "{{ apt_packages }}"
  become: true

# https://github.com/gsamokovarov/jump
- name: Download Jump
  get_url: 
    url: https://github.com/gsamokovarov/jump/releases/download/v0.40.0/jump_0.40.0_amd64.deb 
    dest: /tmp/jump_0.40.0_amd64.deb
    mode: '0755'

- name: Install Jump
  shell: sudo dpkg -i /tmp/jump_0.40.0_amd64.deb

- name: Delete Jump install package
  file: 
    state: absent
    path: /tmp/jump_0.40.0_amd64.deb

- name: Configure git_config
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: "{{ item.scope }}"
  with_items: "{{ git_configurations }}"

- name: Create directory for local development
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
  with_items: "{{ dev_directories }}"

- name: Clone dotfiles repository
  git:
    repo: "{{ dotfile_repo.repo }}"
    dest: "{{ dotfile_repo.dest }}"
    clone: yes
  when:
    - not dotfile_repo_directory.stat.exists

- name: Update dotfiles repository
  git:
    repo: "{{ dotfile_repo.repo }}"
    dest: "{{ dotfile_repo.dest }}"
    clone: no
    track_submodules: yes
    update: yes
  when:
    - dotfile_repo_directory.stat.exists

- name: Setup dotfile settings
  shell:
    cmd: cd ~/dev/workspace/dotfiles/; bash setup.sh

# https://starship.rs/
- name: Download Starship
  get_url: 
    url: https://starship.rs/install.sh
    dest: /tmp/starship-install.sh
    mode: '0755'

- name: Install Starship
  shell: sh /tmp/starship-install.sh -y

- name: Delete Starship install script
  file: 
    state: absent
    path: /tmp/starship-install.sh