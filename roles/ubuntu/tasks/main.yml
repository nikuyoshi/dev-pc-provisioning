---
# tasks file for ubuntu
- name: Check the git directory status
  stat:
    path: "{{ dotfile_repo.dest }}"
  register: dotfile_repo_directory
    
- name: Add 1Password GPG key
  ansible.builtin.apt_key:
    url: https://downloads.1password.com/linux/keys/1password.asc
    keyring: /usr/share/keyrings/1password-archive-keyring.gpg
    state: present
  become: true

- name: Add 1Password repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main"
    filename: 1password
    state: present
  become: true

- name: Install Terraform from HashiCorp
  block:
    - name: Add HashiCorp GPG key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        keyring: /usr/share/keyrings/hashicorp-archive-keyring.gpg
        state: present
      become: true

    - name: Add HashiCorp repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        filename: hashicorp
        state: present
      become: true

- name: Update apt and install softwares
  apt:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    update_cache: yes
  with_items: "{{ apt_packages }}"
  become: true

- name: Install Jump
  snap: 
    name: jump

- name: Configure git_config
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: "{{ item.scope }}"
  with_items: "{{ git_configurations }}"

- name: Create directory for local development
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
  with_items: "{{ dev_directories }}"

- name: Clone dotfiles repository
  git:
    repo: "{{ dotfile_repo.repo }}"
    dest: "{{ dotfile_repo.dest }}"
    clone: yes
  when:
    - not dotfile_repo_directory.stat.exists

- name: Update dotfiles repository
  git:
    repo: "{{ dotfile_repo.repo }}"
    dest: "{{ dotfile_repo.dest }}"
    clone: no
    track_submodules: yes
    update: yes
  when:
    - dotfile_repo_directory.stat.exists

- name: Setup dotfile settings
  shell:
    cmd: cd ~/dev/workspace/dotfiles/; bash setup.sh

# https://starship.rs/
- name: Download Starship
  get_url: 
    url: https://starship.rs/install.sh
    dest: /tmp/starship-install.sh
    mode: '0755'

- name: Install Starship
  shell: sh /tmp/starship-install.sh -y

- name: Delete Starship install script
  file: 
    state: absent
    path: /tmp/starship-install.sh

- name: Change default shell
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/bin/fish