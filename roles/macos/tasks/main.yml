---
# tasks file for mac

- name: Check the git directory status
  stat:
    path: "{{ dotfile_repo.dest }}"
  register: dotfile_repo_directory
    
- name: Configure git_config
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: "{{ item.scope }}"
  with_items: "{{ git_configurations }}"

- name: Create directory for local development
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
  with_items: "{{ dev_directories }}"

- name: Check the oh-my-zsh directory status
  stat:
    path: "{{ oh_my_zsh.dest }}"
  register: oh_my_zsh_directory

- name: Install oh-my-zsh
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when:
    - not oh_my_zsh_directory.stat.exists

- name: Clone dotfiles repository
  git:
    repo: "{{ dotfile_repo.repo }}"
    dest: "{{ dotfile_repo.dest }}"
    clone: yes
  when:
    - not dotfile_repo_directory.stat.exists

- name: Update dotfiles repository
  git:
    repo: "{{ dotfile_repo.repo }}"
    dest: "{{ dotfile_repo.dest }}"
    clone: no
    track_submodules: yes
    update: yes
  when:
    - dotfile_repo_directory.stat.exists

- name: Setup dotfile settings
  shell:
    cmd: cd ~/dev/workspace/dotfiles/; sh setup.sh

- name: Check the oh-my-zsh directory status
  stat:
    path: "{{ oh_my_zsh.dest }}"
  register: oh_my_zsh_directory

- name: Install oh-my-zsh
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when:
    - not oh_my_zsh_directory.stat.exists

# https://starship.rs/
- name: Download Starship
  get_url: 
    url: https://starship.rs/install.sh
    dest: /tmp/starship-install.sh
    mode: '0755'

- name: Install Starship
  shell: sh /tmp/starship-install.sh -y

- name: Delete Starship install script
  file: 
    state: absent
    path: /tmp/starship-install.sh

- name: Check the oh-my-zsh directory status
  stat:
    path: "{{ oh_my_zsh.dest }}"
  register: oh_my_zsh_directory

- name: Install oh-my-zsh
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  when:
    - not oh_my_zsh_directory.stat.exists

- name: Check zsh-peco-history directory status
  stat:
    path: "{{ zsh_peco_history.dest }}"
  register: zsh_peco_history_directory

- name: Clone zsh-peco-history repository
  git:
    repo: "{{ zsh_peco_history.repo }}"
    dest: "{{ zsh_peco_history.dest }}"
    clone: yes
  when:
    - not zsh_peco_history_directory.stat.exists

- name: Install homebrew tap softwares
  homebrew_tap:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: "{{ homebrew_tap_packages }}"

- name: Update homebrew and install softwares
  homebrew:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    update_homebrew: yes
  with_items: "{{ homebrew_packages }}"

- name: Configure osx_defaults
  osx_defaults:
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
  with_items: "{{ osx_defaults_configurations }}"

- name: Configure npm
  npm:
    name: "{{ item.name }}"
    global: "{{ item.global }}"
    state: "{{ item.state }}"
  with_items: "{{ nodejs_npm }}"
